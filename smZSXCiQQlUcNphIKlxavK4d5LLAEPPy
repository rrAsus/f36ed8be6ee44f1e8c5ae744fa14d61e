-- streamable aim lock
configs = {main={enabled=true,aimlockkey="q",prediction=0.173,aimpart="HumanoidRootPart",notifications=false}};
		boxsettings = {box={Showbox=false,boxsize=Vector3.new(3.3, 3, 2.8),markercolor=Color3.fromRGB(255, 245, 0),markersize=UDim2.new(0, 0, 0, 0)}};
		box = Instance.new("Part", game.Workspace);
		Mouse = LocalPlayer:GetMouse();
		function makemarker(Parent, Adornee, Color, Size, Size2)
			box = Instance.new("BillboardGui", Parent);
			box.Name = "Dashware!";
			box.Adornee = Adornee;
			box.Size = UDim2.new(Size, Size2, Size, Size2);
			box.AlwaysOnTop = true;
			a = Instance.new("Frame", box);
			a.Size = boxsettings.box.markersize;
			a.BackgroundColor3 = Color;
			g = Instance.new("UICorner", a);
			g.CornerRadius = UDim.new(0, 0);
			return box;
		end
		local Plr;
		Mouse.KeyDown:Connect(function(KeyPressed)
			if (KeyPressed == configs.main.aimlockkey) then
				if (configs.main.enabled == true) then
					configs.main.enabled = false;
					if (configs.main.notifications == true) then
						Plr = FindClosestUser();
						game.StarterGui:SetCore("SendNotification", {Title="Dashware",Text="Unlocked;"});
					end
				else
					Plr = FindClosestUser();
					configs.main.enabled = true;
					if (configs.main.notifications == true) then
						game.StarterGui:SetCore("SendNotification", {Title="Dashware",Text=("Locked On;  " .. tostring(Plr.Character.Humanoid.DisplayName))});
					end
				end
			end
		end);
		data = game.Players:GetPlayers();
		function noob(player)
			local character;
			repeat
				task.wait();
			until player.Character 
			handler = makemarker(guimain, player.Character:WaitForChild(configs.main.aimpart), Color3.fromRGB(107, 184, 255), 0.1, 8);
			handler.Name = player.Name;
			player.CharacterAdded:connect(function(Char)
				handler.Adornee = Char:WaitForChild("HumanoidRootPart");
			end);
		end
		for i = 1, #data do
			if (data[i] ~= LocalPlayer) then
				noob(data[i]);
			end
		end
		game.Players.PlayerAdded:connect(function(Player)
			noob(Player);
		end);
		task.spawn(function()
			box.Anchored = true;
			box.CanCollide = false;
			box.Size = boxsettings.box.boxsize;
			if (boxsettings.box.Showbox == true) then
				box.Transparency = 0.8;
			else
				box.Transparency = 1;
			end
			makemarker(box, box, boxsettings.box.markercolor, 0.4, 1);
		end);
		function FindClosestUser()
			local closestPlayer;
			ShortestDistance = 300;
			for i, v in pairs(game.Players:GetPlayers()) do
				if ((v ~= LocalPlayer) and v.Character and v.Character:FindFirstChild("Humanoid") and (v.Character.Humanoid.Health ~= 0) and v.Character:FindFirstChild("HumanoidRootPart")) then
					pos = game:GetService("Workspace").CurrentCamera:WorldToViewportPoint(v.Character.PrimaryPart.Position);
					magnitude = (Vector2.new(pos.X, pos.Y) - Vector2.new(LocalPlayer:GetMouse().X, LocalPlayer:GetMouse().Y)).magnitude;
					if (magnitude < ShortestDistance) then
						closestPlayer = v;
						ShortestDistance = magnitude;
					end
				end
			end
			return closestPlayer;
		end
		game:GetService("RunService").Stepped:connect(function()
			if (configs.main.enabled and Plr.Character and Plr.Character:FindFirstChild("HumanoidRootPart")) then
				box.CFrame = CFrame.new(Plr.Character[configs.main.aimpart].Position + (Plr.Character.UpperTorso.Velocity * configs.main.prediction));
			else
				box.CFrame = CFrame.new(0, 9999, 0);
			end
		end);
		repeat
			task.wait();
		until game:IsLoaded() 
		mt = getrawmetatable(game);
		old = mt.__namecall;
		setreadonly(mt, false);
		mt.__namecall = newcclosure(function(...)
			args = {...};
			if (configs.main.enabled and (getnamecallmethod() == "FireServer") and (args[2] == "UpdateMousePos")) then
				args[3] = Plr.Character[configs.main.aimpart].Position + (Plr.Character[configs.main.aimpart].Velocity * configs.main.prediction);
				return old(unpack(args));
			end
			return old(...);
		end);
